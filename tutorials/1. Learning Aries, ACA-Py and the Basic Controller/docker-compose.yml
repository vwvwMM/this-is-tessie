version: "3"
services:
  music-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://music-agent:${MUSIC_ADMIN_PORT}
      - AGENT_NAME=${MUSIC_AGENT_NAME}
      - ADMIN_PORT=${MUSIC_ADMIN_PORT}
      - HTTP_PORT=${MUSIC_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${MUSIC_WEBHOOK_URL}
      - AGENT_ENDPOINT=${MUSIC_AGENT_ENDPOINT}
      - WALLET_SEED=${MUSIC_WALLET_SEED}
      - WALLET_NAME=${MUSIC_WALLET_NAME}
      - WALLET_TYPE=${WALLET_TYPE}
      - WALLET_KEY=${MUSIC_WALLET_KEY}
      - ACAPY_ADMIN_API_KEY=${MUSIC_API_KEY}
      # - ACAPY_ADMIN_INSECURE_MODE=${MUSIC_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${MUSIC_HTTP_PORT}:${MUSIC_HTTP_PORT}
      - ${MUSIC_ADMIN_PORT}:${MUSIC_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - indy_demo
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${MUSIC_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${MUSIC_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]

  sp-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://sp-agent:${SP_ADMIN_PORT}
      - AGENT_NAME=${SP_AGENT_NAME}
      - ADMIN_PORT=${SP_ADMIN_PORT}
      - HTTP_PORT=${SP_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${SP_WEBHOOK_URL}
      - AGENT_ENDPOINT=${SP_AGENT_ENDPOINT}
      - WALLET_SEED=${SP_WALLET_SEED}
      - WALLET_NAME=${SP_WALLET_NAME}
      - WALLET_TYPE=${WALLET_TYPE}
      - WALLET_KEY=${SP_WALLET_KEY}
      - ACAPY_ADMIN_API_KEY=${SP_API_KEY}
      # - ACAPY_ADMIN_INSECURE_MODE=${SP_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${SP_HTTP_PORT}:${SP_HTTP_PORT}
      - ${SP_ADMIN_PORT}:${SP_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - indy_demo
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${SP_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${SP_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]

  dm-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://dm-agent:${DM_ADMIN_PORT}
      - AGENT_NAME=${DM_AGENT_NAME}
      - ADMIN_PORT=${DM_ADMIN_PORT}
      - HTTP_PORT=${DM_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${DM_WEBHOOK_URL}
      - AGENT_ENDPOINT=${DM_AGENT_ENDPOINT}
      - WALLET_SEED=${DM_WALLET_SEED}
      - WALLET_NAME=${DM_WALLET_NAME}
      - WALLET_TYPE=${WALLET_TYPE}
      - WALLET_KEY=${DM_WALLET_KEY}
      - ACAPY_ADMIN_API_KEY=${DM_API_KEY}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${DM_HTTP_PORT}:${DM_HTTP_PORT}
      - ${DM_ADMIN_PORT}:${DM_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - indy_demo
#    volumes:
#      - dm-wallet:/indy/home/.indy_client/default
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${DM_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${DM_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]
  setup:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile.createconnection
    networks:
      - indy_demo
    depends_on:
      - dm-agent
      - music-agent
      - sp-agent
#    ports:
#      - ${DM_WEBHOOK_PORT}:${DM_WEBHOOK_PORT}
#      - ${MUSIC_WEBHOOK_PORT}:${MUSIC_WEBHOOK_PORT}
    environment:
      - DM_ADMIN_URL=http://dm-agent:${DM_ADMIN_PORT}
      - DM_WEBHOOK_PORT=${DM_WEBHOOK_PORT}
      - DM_API_KEY=${DM_API_KEY}
      - DM_WEBHOOK_HOST=0.0.0.0
      - MUSIC_ADMIN_URL=http://music-agent:${MUSIC_ADMIN_PORT}
      - MUSIC_WEBHOOK_PORT=${MUSIC_WEBHOOK_PORT}
      - MUSIC_API_KEY=${MUSIC_API_KEY}
      - MUSIC_WEBHOOK_HOST=0.0.0.0
      - SP_ADMIN_URL=http://sp-agent:${SP_ADMIN_PORT}
      - SP_WEBHOOK_PORT=${SP_WEBHOOK_PORT}
      - SP_API_KEY=${SP_API_KEY}
      - SP_WEBHOOK_HOST=0.0.0.0
    entrypoint: /bin/bash
    command:
      [
        "-c",
        "sleep 80;
        python ./create_connection.py"
      ]
  dm-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${DM_JUPYTER_PORT}
        - DM_API_KEY=${DM_API_KEY}
    depends_on:
      - dm-agent
    networks:
      - indy_demo
    volumes:
      - ./notebooks/dm:/workspace
    ports:
      - "8888:8888"
      - ${DM_WEBHOOK_PORT}:${DM_WEBHOOK_PORT}
  music-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${MUSIC_JUPYTER_PORT}
        - MUSIC_API_KEY=${MUSIC_API_KEY}

    depends_on:
      - music-agent
    networks:
      - indy_demo
    volumes:
      - ${PWD}/notebooks/music:/workspace
    ports:
      - "8889:8888"
      - ${MUSIC_WEBHOOK_PORT}:${MUSIC_WEBHOOK_PORT}
  sp-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${SP_JUPYTER_PORT}
        - SP_API_KEY=${SP_API_KEY}
    depends_on:
      - sp-agent
    networks:
      - indy_demo
    volumes:
      - ${PWD}/notebooks/sp:/workspace
    ports:
      - "8887:8888"
      - ${SP_WEBHOOK_PORT}:${SP_WEBHOOK_PORT}
  ledger-browser:
    build:
      context: https://github.com/bcgov/von-network.git#main
      dockerfile: Dockerfile
    command: "bash -c 'sleep 10; ./scripts/start_webserver.sh;'"
    environment:
      - DOCKERHOST=${DOCKERHOST}
      - MAX_FETCH=50000
      - RESYNC_TIME=120
      - REGISTER_NEW_DIDS=True
      - LEDGER_INSTANCE_NAME=localhost
    ports:
      - ${WEB_SERVER_HOST_PORT:-9000}:8000
    volumes:
      - webserver-cli:/home/indy/.indy-cli
      - webserver-ledger:/home/indy/ledger
    networks:
      - indy_demo

  ledger-nodes:
    build:
      context: https://github.com/bcgov/von-network.git#main
      dockerfile: Dockerfile
    command: "bash -c './scripts/start_nodes.sh'"
    ports:
      - 9701:9701
      - 9702:9702
      - 9703:9703
      - 9704:9704
      - 9705:9705
      - 9706:9706
      - 9707:9707
      - 9708:9708
    environment:
      - DOCKERHOST=${DOCKERHOST}
    volumes:
      - nodes-data:/home/indy/ledger
    networks:
      - indy_demo

  tails-server:
    build:
      context: https://github.com/bcgov/indy-tails-server.git#main
      dockerfile: docker/Dockerfile.tails-server
    ports:
      - 6543:6543
    networks:
      - indy_demo
    command: >
      tails-server
        --host 0.0.0.0
        --port 6543
        --storage-path $STORAGE_PATH
        --log-level INFO

networks:
  indy_demo:
volumes:
  webserver-cli:
  webserver-ledger:
  nodes-data:
